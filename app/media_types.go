// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "area": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/hryktrd/goaTest/design
// --out=$(GOPATH)\src\github.com\hryktrd\goaTest
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
)

// A station of mine (default view)
//
// Identifier: application/vnd.point.area+json; view=default
type PointArea struct {
	// Unique station ID
	ID int `form:"id" json:"id" yaml:"id" xml:"id"`
	// Name of station
	Name string `form:"name" json:"name" yaml:"name" xml:"name"`
}

// Validate validates the PointArea media type instance.
func (mt *PointArea) Validate() (err error) {

	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	return
}

// PointAreaCollection is the media type for an array of PointArea (default view)
//
// Identifier: application/vnd.point.area+json; type=collection; view=default
type PointAreaCollection []*PointArea

// Validate validates the PointAreaCollection media type instance.
func (mt PointAreaCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}
